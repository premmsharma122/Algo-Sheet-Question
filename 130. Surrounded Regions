class Solution {
    int m;
    int n;
    public  void dfs(char c[][] ,int row, int col){
        if(row<0 || col<0 || row >= m || col >= n || c[row][col] != 'O') return; 
        c[row][col] ='.';
        dfs(c,row+1,col);
        dfs(c,row,col+1);
        dfs(c,row-1,col);
        dfs(c,row,col-1);
    }
    public void solve(char[][] board) {
        m=board.length;
        n=board[0].length;
        for(int i=0; i<m; ++i){
            dfs(board, i,0);//  first column
            dfs(board, i, n-1); // last column
        }
        for(int j=0; j<n; ++j){
            dfs(board, 0,j); // first row
            dfs(board, m-1, j); // last row
        }
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(board[i][j] == '.'){
                    board[i][j] ='O';
                }else if(board[i][j] == 'O'){
                    board[i][j]= 'X';
                }
            }
        }
    }
}
