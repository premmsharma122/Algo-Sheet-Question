class Solution {
    public int help(int arr[], int idx, int curr, int total, int dp[][]){
        if(idx == arr.length) {
            int s2 = total - curr;
            return Math.abs(curr-s2);
        }
        if(dp[idx][curr] != -1) return dp[idx][curr];
        int ans1 = help(arr, idx+1, curr+arr[idx], total,dp);
        int ans2 = help(arr, idx+1, curr, total,dp);
        return dp[idx][curr] = Math.min(ans1, ans2);
    }
    public int lastStoneWeightII(int[] stones) {
        int total =0;
        for(int n : stones){
            total += n;
        }
        int dp[][] = new int[stones.length][total+1];
        for (int i = 0; i < stones.length; i++) {
            for (int j = 0; j <= total; j++) {
                dp[i][j] = -1;
            }
        }
        return help(stones, 0, 0,total,dp);
    }
}
