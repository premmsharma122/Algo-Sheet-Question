class Solution {
    public static void dfs(char g[][], int i, int j){
        if(i<0 || i>=g.length || j<0 || j>=g[0].length || g[i][j] !=  '1'){
            return;
        }
        g[i][j] ='0'; // mark 
        dfs(g,i+1, j); // down 
        dfs(g, i-1, j); // up 
        dfs(g,i,j+1); // right side
        dfs(g, i, j-1); // left side
    }
    public int numIslands(char[][] grid) {
        if (grid == null || grid.length == 0) {
            return 0;
        }
        int c=0;
        for(int i=0; i<grid.length; i++){
            for(int j=0; j<grid[0].length; j++){
                if(grid[i][j] == '1'){
                    c++;
                    dfs(grid, i, j);
                }
            }
        }
        return c;
    }

}
