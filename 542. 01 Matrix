class Solution {
    public int[][] updateMatrix(int[][] mat) {
        int ans[][] = new int[mat.length][mat[0].length];
        Queue<int[]> q = new LinkedList<>();
        for(int i=0; i<mat.length; i++){
            for(int j=0; j<mat[0].length; j++){
               if(mat[i][j] == 0){
                ans[i][j] = 0;
                q.add(new int[]{i,j});
               }else{
                ans[i][j] =-1;
               }
            }
        }
        int dir[][] = {{1,0},{-1,0},{0,1},{0,-1}};

        while(!q.isEmpty()){
            int p[] = q.poll();
            int x = p[0];
            int y = p[1];
            for(int d[] : dir){
                int nx = x + d[0];
                int ny = y + d[1];
                if(nx>=0 && ny>=0 && nx<mat.length && ny < mat[0].length && ans[nx][ny] == -1 ) {
                    ans[nx][ny] = ans[x][y] +1;
                    q.add(new int[]{nx,ny});
                }
            }
           
        }
        return ans;
    }
}
